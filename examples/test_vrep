#!/usr/bin/env python

"""
This is a script for testing the example v-rep simulation
`arm_scene_example.ttt`. The purpose is to demonstrate how the simulation
works, not necessarily to test the vrepsim module.
"""

import sys
import argparse
import time

try:
    from pygesture import config
except ImportError:
    sys.path.insert(0, '..')
    from pygesture import config

from pygesture import control
from pygesture.simulation import vrepsim

parser = argparse.ArgumentParser(
    description="Runs through a pre-programmed sequence of movements.")
parser.add_argument('-c', '--config', default='config.py',
    help="Config file. Default is `config.py` (current directory).")
args = parser.parse_args()

cfg = config.Config(args.config)
vrepsim.set_path(cfg.vrep_path)
from pygesture.simulation import vrep

sim = vrepsim.VrepSimulation(cfg.vrep_port)
sim.start()

target_action = {
    'elbow-extension': 75,
    'forearm-supination': 75,
    'wrist-extension': 75,
    'open-hand': 50
}

input_sequence = \
    [0]*3 + [3]*5 + [0]*3 + [7]*8 + [0]*3 + [8]*4 + [4]*10 + [5]*8 + [0]*10

acquired_signal = vrepsim.IntegerSignal(sim.clientId, 'target_acquired')
robot = vrepsim.IRB140Arm(sim.clientId)
ref_robot = vrepsim.IRB140Arm(
        sim.clientId, suffix='#0', position_controlled=True)

ref_robot.command(target_action)
time.sleep(1)

robot.set_tolerance(30)
controller = cfg.controller
for label in input_sequence:
    robot.command(controller.process((1, label)))

    acq = acquired_signal.read()
    if acq is not None:
        print("target acquired: %d" % acq)

    time.sleep(0.25)

ref_robot.stop()

time.sleep(1)

sim.finish()
